/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.ParcelInvoiceLine;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ParcelInvoiceLineApi
 */
@Ignore
public class ParcelInvoiceLineApiTest {

    private final ParcelInvoiceLineApi api = new ParcelInvoiceLineApi();

    
    /**
     * Add new audit for a parcelInvoiceLine
     *
     * Adds an audit to an existing parcelInvoiceLine.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addParcelInvoiceLineAuditTest() throws ApiException {
        Integer parcelInvoiceLineId = null;
        String parcelInvoiceLineAudit = null;
        api.addParcelInvoiceLineAudit(parcelInvoiceLineId, parcelInvoiceLineAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a parcelInvoiceLine
     *
     * Adds a file to an existing parcelInvoiceLine.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addParcelInvoiceLineFileTest() throws ApiException {
        Integer parcelInvoiceLineId = null;
        String fileName = null;
        api.addParcelInvoiceLineFile(parcelInvoiceLineId, fileName);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a parcelInvoiceLine.
     *
     * Adds a tag to an existing parcelInvoiceLine.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addParcelInvoiceLineTagTest() throws ApiException {
        Integer parcelInvoiceLineId = null;
        String parcelInvoiceLineTag = null;
        api.addParcelInvoiceLineTag(parcelInvoiceLineId, parcelInvoiceLineTag);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a parcelInvoiceLine.
     *
     * Deletes an existing parcelInvoiceLine tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteParcelInvoiceLineTagTest() throws ApiException {
        Integer parcelInvoiceLineId = null;
        String parcelInvoiceLineTag = null;
        api.deleteParcelInvoiceLineTag(parcelInvoiceLineId, parcelInvoiceLineTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a parcelInvoiceLine by id
     *
     * Returns a duplicated parcelInvoiceLine identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateParcelInvoiceLineByIdTest() throws ApiException {
        Integer parcelInvoiceLineId = null;
        ParcelInvoiceLine response = api.getDuplicateParcelInvoiceLineById(parcelInvoiceLineId);

        // TODO: test validations
    }
    
    /**
     * Search parcelInvoiceLines by filter
     *
     * Returns the list of parcelInvoiceLines that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getParcelInvoiceLineByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<ParcelInvoiceLine> response = api.getParcelInvoiceLineByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a parcelInvoiceLine by id
     *
     * Returns the parcelInvoiceLine identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getParcelInvoiceLineByIdTest() throws ApiException {
        Integer parcelInvoiceLineId = null;
        ParcelInvoiceLine response = api.getParcelInvoiceLineById(parcelInvoiceLineId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a parcelInvoiceLine.
     *
     * Get all existing parcelInvoiceLine tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getParcelInvoiceLineTagsTest() throws ApiException {
        Integer parcelInvoiceLineId = null;
        api.getParcelInvoiceLineTags(parcelInvoiceLineId);

        // TODO: test validations
    }
    
    /**
     * Update a parcelInvoiceLine
     *
     * Updates an existing parcelInvoiceLine using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateParcelInvoiceLineTest() throws ApiException {
        ParcelInvoiceLine body = null;
        api.updateParcelInvoiceLine(body);

        // TODO: test validations
    }
    
}
