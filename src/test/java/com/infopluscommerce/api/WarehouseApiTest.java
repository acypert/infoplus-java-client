/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.Warehouse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WarehouseApi
 */
@Ignore
public class WarehouseApiTest {

    private final WarehouseApi api = new WarehouseApi();

    
    /**
     * Add new audit for a warehouse
     *
     * Adds an audit to an existing warehouse.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addWarehouseAuditTest() throws ApiException {
        Integer warehouseId = null;
        String warehouseAudit = null;
        api.addWarehouseAudit(warehouseId, warehouseAudit);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a warehouse.
     *
     * Adds a tag to an existing warehouse.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addWarehouseTagTest() throws ApiException {
        Integer warehouseId = null;
        String warehouseTag = null;
        api.addWarehouseTag(warehouseId, warehouseTag);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a warehouse.
     *
     * Deletes an existing warehouse tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteWarehouseTagTest() throws ApiException {
        Integer warehouseId = null;
        String warehouseTag = null;
        api.deleteWarehouseTag(warehouseId, warehouseTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a warehouse by id
     *
     * Returns a duplicated warehouse identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateWarehouseByIdTest() throws ApiException {
        Integer warehouseId = null;
        Warehouse response = api.getDuplicateWarehouseById(warehouseId);

        // TODO: test validations
    }
    
    /**
     * Search warehouses by filter
     *
     * Returns the list of warehouses that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWarehouseByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<Warehouse> response = api.getWarehouseByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a warehouse by id
     *
     * Returns the warehouse identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWarehouseByIdTest() throws ApiException {
        Integer warehouseId = null;
        Warehouse response = api.getWarehouseById(warehouseId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a warehouse.
     *
     * Get all existing warehouse tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWarehouseTagsTest() throws ApiException {
        Integer warehouseId = null;
        api.getWarehouseTags(warehouseId);

        // TODO: test validations
    }
    
    /**
     * Update a warehouse
     *
     * Updates an existing warehouse using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateWarehouseTest() throws ApiException {
        Warehouse body = null;
        api.updateWarehouse(body);

        // TODO: test validations
    }
    
    /**
     * Update a warehouse custom fields
     *
     * Updates an existing warehouse custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateWarehouseCustomFieldsTest() throws ApiException {
        Warehouse body = null;
        api.updateWarehouseCustomFields(body);

        // TODO: test validations
    }
    
}
