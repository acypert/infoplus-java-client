/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.FulfillmentProcess;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FulfillmentProcessApi
 */
@Ignore
public class FulfillmentProcessApiTest {

    private final FulfillmentProcessApi api = new FulfillmentProcessApi();

    
    /**
     * Add new audit for a fulfillmentProcess
     *
     * Adds an audit to an existing fulfillmentProcess.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addFulfillmentProcessAuditTest() throws ApiException {
        Integer fulfillmentProcessId = null;
        String fulfillmentProcessAudit = null;
        api.addFulfillmentProcessAudit(fulfillmentProcessId, fulfillmentProcessAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a fulfillmentProcess
     *
     * Adds a file to an existing fulfillmentProcess.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addFulfillmentProcessFileTest() throws ApiException {
        Integer fulfillmentProcessId = null;
        String fileName = null;
        api.addFulfillmentProcessFile(fulfillmentProcessId, fileName);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a fulfillmentProcess.
     *
     * Adds a tag to an existing fulfillmentProcess.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addFulfillmentProcessTagTest() throws ApiException {
        Integer fulfillmentProcessId = null;
        String fulfillmentProcessTag = null;
        api.addFulfillmentProcessTag(fulfillmentProcessId, fulfillmentProcessTag);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a fulfillmentProcess.
     *
     * Deletes an existing fulfillmentProcess tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteFulfillmentProcessTagTest() throws ApiException {
        Integer fulfillmentProcessId = null;
        String fulfillmentProcessTag = null;
        api.deleteFulfillmentProcessTag(fulfillmentProcessId, fulfillmentProcessTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a fulfillmentProcess by id
     *
     * Returns a duplicated fulfillmentProcess identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateFulfillmentProcessByIdTest() throws ApiException {
        Integer fulfillmentProcessId = null;
        FulfillmentProcess response = api.getDuplicateFulfillmentProcessById(fulfillmentProcessId);

        // TODO: test validations
    }
    
    /**
     * Search fulfillmentProcesses by filter
     *
     * Returns the list of fulfillmentProcesses that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFulfillmentProcessByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<FulfillmentProcess> response = api.getFulfillmentProcessByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a fulfillmentProcess by id
     *
     * Returns the fulfillmentProcess identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFulfillmentProcessByIdTest() throws ApiException {
        Integer fulfillmentProcessId = null;
        FulfillmentProcess response = api.getFulfillmentProcessById(fulfillmentProcessId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a fulfillmentProcess.
     *
     * Get all existing fulfillmentProcess tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFulfillmentProcessTagsTest() throws ApiException {
        Integer fulfillmentProcessId = null;
        api.getFulfillmentProcessTags(fulfillmentProcessId);

        // TODO: test validations
    }
    
    /**
     * Update a fulfillmentProcess custom fields
     *
     * Updates an existing fulfillmentProcess custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateFulfillmentProcessCustomFieldsTest() throws ApiException {
        FulfillmentProcess body = null;
        api.updateFulfillmentProcessCustomFields(body);

        // TODO: test validations
    }
    
}
