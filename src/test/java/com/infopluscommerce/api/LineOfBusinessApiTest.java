/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.LineOfBusiness;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LineOfBusinessApi
 */
@Ignore
public class LineOfBusinessApiTest {

    private final LineOfBusinessApi api = new LineOfBusinessApi();

    
    /**
     * Add new audit for a lineOfBusiness
     *
     * Adds an audit to an existing lineOfBusiness.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addLineOfBusinessAuditTest() throws ApiException {
        Integer lineOfBusinessId = null;
        String lineOfBusinessAudit = null;
        api.addLineOfBusinessAudit(lineOfBusinessId, lineOfBusinessAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a lineOfBusiness
     *
     * Adds a file to an existing lineOfBusiness.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addLineOfBusinessFileTest() throws ApiException {
        Integer lineOfBusinessId = null;
        String fileName = null;
        api.addLineOfBusinessFile(lineOfBusinessId, fileName);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a lineOfBusiness.
     *
     * Adds a tag to an existing lineOfBusiness.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addLineOfBusinessTagTest() throws ApiException {
        Integer lineOfBusinessId = null;
        String lineOfBusinessTag = null;
        api.addLineOfBusinessTag(lineOfBusinessId, lineOfBusinessTag);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a lineOfBusiness.
     *
     * Deletes an existing lineOfBusiness tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLineOfBusinessTagTest() throws ApiException {
        Integer lineOfBusinessId = null;
        String lineOfBusinessTag = null;
        api.deleteLineOfBusinessTag(lineOfBusinessId, lineOfBusinessTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a lineOfBusiness by id
     *
     * Returns a duplicated lineOfBusiness identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateLineOfBusinessByIdTest() throws ApiException {
        Integer lineOfBusinessId = null;
        LineOfBusiness response = api.getDuplicateLineOfBusinessById(lineOfBusinessId);

        // TODO: test validations
    }
    
    /**
     * Search lineOfBusinesses by filter
     *
     * Returns the list of lineOfBusinesses that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLineOfBusinessByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<LineOfBusiness> response = api.getLineOfBusinessByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a lineOfBusiness by id
     *
     * Returns the lineOfBusiness identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLineOfBusinessByIdTest() throws ApiException {
        Integer lineOfBusinessId = null;
        LineOfBusiness response = api.getLineOfBusinessById(lineOfBusinessId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a lineOfBusiness.
     *
     * Get all existing lineOfBusiness tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLineOfBusinessTagsTest() throws ApiException {
        Integer lineOfBusinessId = null;
        api.getLineOfBusinessTags(lineOfBusinessId);

        // TODO: test validations
    }
    
    /**
     * Update a lineOfBusiness
     *
     * Updates an existing lineOfBusiness using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLineOfBusinessTest() throws ApiException {
        LineOfBusiness body = null;
        api.updateLineOfBusiness(body);

        // TODO: test validations
    }
    
    /**
     * Update a lineOfBusiness custom fields
     *
     * Updates an existing lineOfBusiness custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLineOfBusinessCustomFieldsTest() throws ApiException {
        LineOfBusiness body = null;
        api.updateLineOfBusinessCustomFields(body);

        // TODO: test validations
    }
    
}
